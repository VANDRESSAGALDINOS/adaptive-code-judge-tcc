#!/bin/bash
# Script para executar o Adaptive Code Judge com a vers√£o correta do Python

export PYTHON_CMD="/usr/bin/python3"

echo "üöÄ Adaptive Code Judge Launcher"
echo "üêç Usando Python: $($PYTHON_CMD --version)"
echo ""

case "$1" in
    "server"|"start")
        echo "üì° Iniciando servidor..."
        $PYTHON_CMD start_server.py
        ;;
    "test")
        echo "üß™ Executando testes completos..."
        $PYTHON_CMD test.py
        ;;
    "demo")
        echo "üé¨ Executando demonstra√ß√£o..."
        $PYTHON_CMD demo_final.py
        ;;
    "docker-test")
        echo "üê≥ Testando Docker..."
        echo "Testando execu√ß√£o direta via Docker..."
        echo 'print("Hello Docker Python!")' > /tmp/test.py
        docker run --rm -v /tmp:/workspace -w /workspace adaptivejudge-python:latest python3 test.py
        echo 'echo "Hello Docker C++!"' > /tmp/test.sh
        docker run --rm -v /tmp:/workspace -w /workspace adaptivejudge-cpp:latest bash test.sh
        ;;
    "health")
        echo "üè• Verificando sa√∫de do sistema..."
        sleep 2
        curl -s http://localhost:8000/health || echo "Servidor n√£o est√° rodando"
        ;;
    *)
        echo "üìã Uso: ./run.sh [comando]"
        echo ""
        echo "Comandos dispon√≠veis:"
        echo "  server     - Iniciar o servidor web"
        echo "  test       - Executar testes completos do sistema"
        echo "  demo       - Executar demonstra√ß√£o completa"
        echo "  docker-test- Testar Docker images diretamente"
        echo "  health     - Verificar status do servidor"
        echo ""
        echo "Exemplos:"
        echo "  ./run.sh server    # Inicia o servidor"
        echo "  ./run.sh test      # Executa testes"
        ;;
esac
